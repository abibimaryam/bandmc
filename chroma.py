import os
import shutil
import pandas as pd
from langchain_community.vectorstores import Chroma
from langchain.schema import Document
from embedding_functiom import embedding_function
from config import DATA_DIR,CHROMA_PATH


# –ü—É—Ç–∏
DATA_DIR = DATA_DIR
CHROMA_PATH = CHROMA_PATH

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —ç–º–±–µ–¥–¥–∏–Ω–≥-—Ñ—É–Ω–∫—Ü–∏—é –æ–¥–∏–Ω —Ä–∞–∑
embedding_func = embedding_function()


def load_all_documents(data_dir: str) -> list[Document]:
    """–°—á–∏—Ç—ã–≤–∞–µ—Ç –≤—Å–µ Excel-—Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ Document."""
    excel_files = [f for f in os.listdir(data_dir) if f.endswith(".xlsx")]
    docs = []

    for file in excel_files:
        path = os.path.join(data_dir, file)
        df = pd.read_excel(path, skiprows=1)
        df = df.fillna("")
        df.columns = [' '.join(col.strip().split()) for col in df.columns]

        for idx, row in df.iterrows():
            content = "\n".join([f"{col}: {row[col]}" for col in df.columns])
            try:
                metadata = {
                    "—Ç–æ—Ä–≥–æ–≤–æ–µ_–Ω–∞–∑–≤–∞–Ω–∏–µ": row.get("–¢–æ—Ä–≥–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Å–∏–Ω–æ–Ω–∏–º", ""),
                    "–º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–µ_–Ω–∞–∑–≤–∞–Ω–∏–µ": row.get("–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ", ""),
                    "—Ñ–∞–π–ª": file
                }
                doc = Document(page_content=content, metadata=metadata)
                docs.append(doc)
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ {idx} —Ñ–∞–π–ª–∞ {file}: {e}")
    return docs


def reset_chroma():
    """–£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—É—é –±–∞–∑—É –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—ë—Ç –µ—ë —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏."""
    if os.path.exists(CHROMA_PATH):
        print("‚ôªÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–π –±–∞–∑—ã Chroma...")
        shutil.rmtree(CHROMA_PATH)

    print("üì• –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...")
    docs = load_all_documents(DATA_DIR)
    print(f"üìÑ –í—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {len(docs)}")

    vectordb = Chroma(
        collection_name="meds",
        embedding_function=embedding_func,
        persist_directory=CHROMA_PATH,
    )

    vectordb.add_documents(docs)
    vectordb.persist()
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(docs)} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –Ω–æ–≤—É—é ChromaDB.")
    print(f"üì¶ –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞: {vectordb._collection.count()}")


def update_chroma():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é ChromaDB."""
    print("üì• –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...")
    docs = load_all_documents(DATA_DIR)
    print(f"üìÑ –í—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {len(docs)}")

    vectordb = Chroma(
        collection_name="meds",
        embedding_function=embedding_func,
        persist_directory=CHROMA_PATH,
    )

    vectordb.add_documents(docs)
    vectordb.persist()
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(docs)} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ ChromaDB.")
    print(f"üì¶ –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {vectordb._collection.count()}")


# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
reset_chroma()  # –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–Ω–æ–≤–æ
# update_chroma()  # –ß—Ç–æ–±—ã –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã
